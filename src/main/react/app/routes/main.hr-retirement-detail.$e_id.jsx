/* eslint-disable react/react-in-jsx-scope */
import AppConfig from "#config/AppConfig.json";
import { useNavigate, useParams } from "@remix-run/react";
import { useEffect, useState } from "react";
import { Button, Container, DatePicker, Form, Radio, RadioGroup, Schema, Grid, Row, Col, FlexboxGrid, Panel, Divider, ButtonToolbar, SelectPicker } from "rsuite";
import MessageBox from "#components/common/MessageBox.jsx";
import { useToast } from '#components/common/ToastProvider';

const model = Schema.Model({
  re_type: Schema.Types.StringType().isRequired("Ìá¥ÏßÅ Ïú†ÌòïÏùÄ ÌïÑÏàòÏûÖÎãàÎã§"),
  re_approval_status: Schema.Types.StringType().isRequired("ÏäπÏù∏ ÏÉÅÌÉúÎäî ÌïÑÏàòÏûÖÎãàÎã§")
});

// Ìá¥ÏßÅÍ¥ÄÎ¶¨ ÏÉÅÏÑ∏ÌéòÏù¥ÏßÄ
export default function HrRetirementDetail() {
  const fetchURL = AppConfig.fetch["mytest"];
  const hrURL = `${fetchURL.protocol}${fetchURL.url}/hr`;
  const { showToast } = useToast();
  const navigate = useNavigate();

  const { e_id } = useParams();     // URLÏóêÏÑú /hr/hrRetirementDetail/{e_id} Í∞ÄÏ†∏Ïò§Í∏∞
  
  // Form.ControlÏóê Ïó∞Í≤∞Îêú value Í∞íÏù¥ nullÏù¥Î©¥ Í≤ΩÍ≥†Í∞Ä Î∞úÏÉùÌïòÍ∏∞ ÎïåÎ¨∏Ïóê, Í∞Å Í∞íÏóê Í∏∞Î≥∏ Í∞íÏùÑ ÏßÄÏ†ïÌï®.
  const [retiData, setRetiData] = useState({
    e_name: "", d_name: "", e_position: "", re_type: "",
    re_app_date: "", re_date: "", re_last_working_date: "",
    re_approval_status: "", re_succession_yn: "", re_reject_reason: "",
    re_approval_date: "",
  });
  const [formError, setFormError] = useState({});

  const approvalStatus = [
    { label: "ÏßÑÌñâÏ§ë", value: "ÏßÑÌñâÏ§ë" },
    { label: "ÏäπÏù∏", value: "ÏäπÏù∏" },
    { label: "Î∞òÎ†§", value: "Î∞òÎ†§" },
  ];
  const type = [
    { label: "ÏÇ¨ÏßÅ", value: "ÏÇ¨ÏßÅ" },
    { label: "Ìá¥ÏÇ¨", value: "Ìá¥ÏÇ¨" },
    { label: "Î©¥ÏßÅ", value: "Î©¥ÏßÅ" },
    { label: "Í∏∞ÌÉÄ", value: "Î©¥ÏßÅ" },
  ]

  
  useEffect(() => {
    if (!e_id) return; // undefined Î∞©ÏßÄ

    fetch(`${hrURL}/hrRetirementDetail/${e_id}`)
      .then(res => res.json())
      .then(res => {
        setRetiData({
          // value ÏÜçÏÑ±ÏùÑ ÏÇ¨Ïö©ÌïòÏßÄ Î™ªÌïòÍ∏∞ ÎïåÎ¨∏Ïóê useEffectÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º Î∞õÏïÑÏò¨ Îïå ÎÇ†Ïßú ÌïÑÎìúÎäî ÎØ∏Î¶¨ DateÎ°ú Î≥ÄÌôòÌï¥ÏÑú Í∞íÏùÑ ÎÑ£Ïñ¥Ï§å
          ...res,
          re_app_date: res.re_app_date ? new Date(res.re_app_date) : null,
          re_date: res.re_date ? new Date(res.re_date) : null,
          re_last_working_date: res.re_last_working_date ? new Date(res.re_last_working_date) : null,
          re_approval_date: res.re_approval_date ? new Date(res.re_approval_date) : null,
        });
      });
  }, [e_id]);    // e_id Î∞îÎÄåÎ©¥ Îã§Ïãú fetch

  // ÏÇ¨Ïö©ÏûêÍ∞Ä ÏûÖÎ†•ÏùÑ Î≥ÄÍ≤ΩÌïòÎ©¥ retiChange Ìï®ÏàòÍ∞Ä Ïã§ÌñâÎêòÏñ¥ ÏûÖÎ†•Í∞íÍ≥º Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨Í≤∞Í≥ºÍ∞Ä ÏÉÅÌÉúÏóê Î∞òÏòÅÎêúÎã§.
  const retiChange = (formValue) => {
    setRetiData(formValue);
    const check = model.check(formValue);
    setFormError(check);
  };

  // ÏàòÏ†ï
  const updateReti = () => {
    fetch(`${hrURL}/hrRetirementUpdate/${e_id}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json;charset=utf-8" },
      body: JSON.stringify(retiData),
    })
    .then(res => res.json())
    .then(res => {
      showToast("ÏàòÏ†ïÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.", "success");
      navigate("/main/hr-retirement");
    })
    .catch(err => {
      showToast("ÏàòÏ†ï Ïã§Ìå®: ", "error" + err.message);
    });
  }

  // Ìá¥ÏßÅÍ¥ÄÎ¶¨ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
  const retiList = () =>  {
      navigate('/main/hr-retirement');
  }

  return (
    <Container>
      <MessageBox text="Ìá¥ÏßÅ Ï†ïÎ≥¥ Í≤ÄÌÜ†"/>

      <FlexboxGrid justify="center" align="middle" style={{ minHeight: "70vh", marginTop: 30, marginBottom: 50 }}>
        <FlexboxGrid.Item colspan={20} style={{ maxWidth: 700, width: "100%" }} >
          <Panel header={<div>üìÑ Ìá¥ÏßÅ Ï†ïÎ≥¥ Í≤ÄÌÜ†</div>} bordered style={{ background: "#fff" }} >
            <Form fluid model={model} formValue={retiData}    // => formValue={retiData} ÏóêÏÑú Í∞íÏùÑ Ï†ÑÎã¨Î∞õÏúºÎØÄÎ°ú Í∞úÎ≥Ñ value={...}Î•º ÏÇ¨Ïö©ÏïàÌï¥ÎèÑ Îê®
              onChange={setRetiData} onCheck={setFormError} style={{ width: 800 }} >
              <Grid fluid>
                
                <Row>
                  <Col xs={20}>
                    <Form.Group controlId="e_name">
                      <Form.ControlLabel>ÏÇ¨ÏõêÎ™Ö</Form.ControlLabel>
                      <Form.Control
                        name="e_name"
                        readOnly
                        disabled
                        style={{ width: '100%', marginBottom: "20px" }}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                <Row gutter={16} >
                  <Col xs={10}>
                    <Form.Group controlId="d_name">
                      <Form.ControlLabel>Î∂ÄÏÑúÎ™Ö</Form.ControlLabel>
                      <Form.Control
                        name="d_name"
                        readOnly
                        disabled
                      />
                    </Form.Group>
                  </Col>
                    
                  <Col xs={10}>
                    <Form.Group controlId="e_position">
                      <Form.ControlLabel>ÏßÅÏúÑ</Form.ControlLabel>
                      <Form.Control
                        name="e_position"
                        readOnly
                        disabled
                      />
                    </Form.Group>
                  </Col>
                </Row>
                
                <Row style={{ marginTop: 20 }}>
                  <Col xs={6.5}>
                    <Form.Group controlId="re_app_date">
                      <Form.ControlLabel>Ìá¥ÏÇ¨ Ïã†Ï≤≠Ïùº</Form.ControlLabel>
                      <Form.Control
                        name="re_app_date"
                        accepter={DatePicker}
                        format="yyyy-MM-dd"
                      />
                    </Form.Group>
                  </Col>
                  
                  <Col xs={6.5}>
                    <Form.Group controlId="re_date">
                      <Form.ControlLabel>Ìá¥ÏÇ¨ ÏòàÏ†ïÏùº</Form.ControlLabel>
                      <Form.Control
                        name="re_date"
                        accepter={DatePicker}
                        format="yyyy-MM-dd"
                      />
                    </Form.Group>
                  </Col>
                  
                  <Col xs={6}>
                    <Form.Group controlId="re_last_working_date">
                      <Form.ControlLabel>ÎßàÏßÄÎßâ Í∑ºÎ¨¥Ïùº</Form.ControlLabel>
                      <Form.Control
                        name="re_last_working_date"
                        accepter={DatePicker}
                        format="yyyy-MM-dd"
                      />
                    </Form.Group>
                  </Col>
                </Row>

                <Row gutter={16} style={{ marginTop: 20 }}>
                  <Col xs={10}>
                    <Form.Group controlId="re_type">
                      <Form.ControlLabel>Ìá¥ÏßÅ Ïú†Ìòï</Form.ControlLabel>
                      <SelectPicker
                        name="re_type"
                        data={type}
                        value={retiData.re_type}
                        onChange={(value) =>
                          setRetiData({ ...retiData, re_type: value })
                        }
                        style={{ width: "100%" }}
                        placeholder="ÏÑ†ÌÉùÌïòÏÑ∏Ïöî"
                        cleanable={false}
                      />
                    </Form.Group>
                    
                    <Form.Group controlId="re_succession_yn">
                      <Form.ControlLabel>Ïù∏ÏàòÏù∏Í≥Ñ Ïó¨Î∂Ä</Form.ControlLabel>
                      <Form.Control
                        name="re_succession_yn"
                        accepter={RadioGroup}
                        inline
                      >
                        <Radio value="Y">Y</Radio>
                        <Radio value="N">N</Radio>
                      </Form.Control>
                    </Form.Group>
                  </Col>

                  <Col xs={10}>                    
                    <Form.Group controlId="re_approval_status">
                      <Form.ControlLabel>ÏäπÏù∏ ÏÉÅÌÉú</Form.ControlLabel>
                      <SelectPicker
                        name="re_approval_status"
                        data={approvalStatus}
                        value={retiData.re_approval_status}
                        onChange={(value) =>
                          setRetiData({ ...retiData, re_approval_status: value })
                        }
                        style={{ width: "100%" }}
                        placeholder="ÏÑ†ÌÉùÌïòÏÑ∏Ïöî"
                        cleanable={false}
                      />
                    </Form.Group>
                  </Col>
                </Row>

                <Row style={{ marginTop: 20 }}>
                  <Col xs={20}>
                    <Form.Group controlId="re_request_reason">
                      <Form.ControlLabel>Ìá¥ÏßÅ ÏÇ¨Ïú†</Form.ControlLabel>
                      <Form.Control name="re_request_reason" />
                    </Form.Group>
                  </Col>
                </Row>

                <Row style={{ marginTop: 20 }}>
                  <Col xs={20}>
                    <Form.Group controlId="re_note">
                      <Form.ControlLabel>Í≤∞Ïû¨ ÏÇ¨Ïú†</Form.ControlLabel>
                      <Form.Control name="re_note" />
                    </Form.Group>
                  </Col>
                </Row>

                <Row style={{ marginTop: 20 }}>
                  <Col xs={24} style={{ textAlign: "center" }}>
                    <ButtonToolbar>
                      <Button appearance="ghost" style={{ color: "#22284c", border: "1px solid #22284c" }} onClick={retiList}>Î™©Î°ù</Button>
                      <Button appearance="ghost" color="blue" onClick={updateReti}>Ï†ÄÏû•</Button>
                    </ButtonToolbar>
                  </Col>
                </Row>
              </Grid>
            </Form>

          </Panel>
        </FlexboxGrid.Item>
      </FlexboxGrid>
    </Container>
  );
}
