<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.erp_ordit.dao.buy.BuyOrderMapper"> <!-- 구매조회(전체,결재중,미확인,확인), 미확인'건수'조회, 상세조회, 구매수정, 구매삭제, 구매 입력, 구매현황 조회, 입고현황 -->

	<!-- 구매조회 탭 전체 목록 -->
	<select id="buyOrderAllList" resultType="com.spring.erp_ordit.dto.buy.BuyOrderDTO">
	      SELECT 
				ot.order_id,
			    ot.order_date,
			    ct.client_name,
			    it.item_name,
			    oit.total,
			    ot.transaction_type,
			    wt.storage_name,
			    ot.delivery_date,
			    ost.order_status
			FROM order_tbl ot
			LEFT JOIN order_item_tbl oit ON oit.order_id = ot.order_id
			LEFT JOIN item_tbl it ON oit.item_id = it.item_id
			LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
			LEFT JOIN warehouse_tbl wt ON ot.storage_code = wt.storage_code
			LEFT JOIN order_status_tbl ost ON ost.order_id = ot.order_id
				WHERE order_show='Y'
				AND ot.order_type = 2 
			 ORDER BY ot.order_id DESC
  	</select>
  	
  	<!-- 구매조회 탭 결재중 목록 -->
	<select id="buyOrderPayingList" resultType="com.spring.erp_ordit.dto.buy.BuyOrderDTO">
	      SELECT 
				ot.order_id,
			    ot.order_date,
			    ct.client_name,
			    it.item_name,
			    oit.total,
			    ot.transaction_type,
			    wt.storage_name,
			    ot.delivery_date,
			    ost.order_status
			FROM order_tbl ot
			LEFT JOIN order_item_tbl oit ON oit.order_id = ot.order_id
			LEFT JOIN item_tbl it ON oit.item_id = it.item_id
			LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
			LEFT JOIN warehouse_tbl wt ON ot.storage_code = wt.storage_code
			LEFT JOIN order_status_tbl ost ON ost.order_id = ot.order_id
			WHERE order_show='Y'
			  AND ost.order_status='결재중'
			  AND ot.order_type = 2
		 ORDER BY ot.order_id DESC
  	</select>
  	
  	<!-- 구매조회 진행상태별 "건수" 조회 -->
  	<select id="buyOrderStatusCount" resultType="map">
			 SELECT 
			    COUNT(*) AS total,
			    COUNT(CASE WHEN ost.order_status = '결재중' THEN 1 END) AS paying,
			    COUNT(CASE WHEN ost.order_status = '승인' THEN 1 END) AS approved
			   FROM order_tbl ot
			   LEFT JOIN order_status_tbl ost ON ot.order_id = ost.order_id
			  WHERE ot.order_show = 'Y'
			    AND ot.order_type = 2
  	</select>

<!-- 	
	구매조회 탭 미확인 목록
	<select id="buyOrderUnchkList" resultType="com.spring.erp_ordit.dto.buy.BuyOrderDTO">
	      SELECT
				ot.order_id, 
			    ot.order_date,
			    ct.client_name,
			    it.item_name,
			    oit.total,
			    ot.transaction_type,
			    wt.storage_name,
			    ot.delivery_date,
			    ost.order_status
			FROM order_tbl ot
			LEFT JOIN order_item_tbl oit ON oit.order_id = ot.order_id
			LEFT JOIN item_tbl it ON oit.item_id = it.item_id
			LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
			LEFT JOIN warehouse_tbl wt ON ot.storage_code = wt.storage_code
			LEFT JOIN order_status_tbl ost ON ost.order_id = ot.order_id
			WHERE ot.order_type = 1
			  AND order_show='Y'
			  AND order_status='미확인'
  	</select>
  	
  	구매조회 탭 미확인 "건수" 조회
	<select id="buyOrderUnchkCount" resultType="int">
			SELECT COUNT(DISTINCT os.order_id) AS buyOrderUnchkCount
			  FROM order_status_tbl os
			  JOIN order_tbl o ON os.order_id = o.order_id
			  WHERE os.order_status = '미확인'
			    AND o.order_type = 1
			    AND o.order_show = 'Y'
  	</select>

 -->  	
 	<!-- 구매조회 탭 확인 목록 -->
	<select id="buyOrderCheckList" resultType="com.spring.erp_ordit.dto.buy.BuyOrderDTO">
	      SELECT 
	      		ot.order_id,
			    ot.order_date,
			    ct.client_name,
			    it.item_name,
			    oit.total,
			    ot.transaction_type,
			    wt.storage_name,
			    ot.delivery_date,
			    ost.order_status,
			    oit.income_confirm
			FROM order_tbl ot
			LEFT JOIN order_item_tbl oit ON oit.order_id = ot.order_id
			LEFT JOIN item_tbl it ON oit.item_id = it.item_id
			LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
			LEFT JOIN warehouse_tbl wt ON ot.storage_code = wt.storage_code
			LEFT JOIN order_status_tbl ost ON ost.order_id = ot.order_id
		   WHERE order_show='Y'
			 AND order_status='승인'
			 AND ot.order_type = 2
		 ORDER BY ot.order_id DESC
  	</select>
  	
  	<!-- 구매 상세 조회 매핑 -->
	<resultMap id="BuyOrderDetailMap" type="com.spring.erp_ordit.dto.buy.BuyOrderDetailDTO">
	    <result property="order_id" column="order_id"/>
	    <result property="order_type" column="order_type"/>
	    <result property="order_date" column="order_date"/>
	    <result property="e_id" column="e_id"/>
	    <result property="e_name" column="e_name"/>
	    <result property="client_code" column="client_code"/>
	    <result property="client_name" column="client_name"/>
	    <result property="delivery_date" column="delivery_date"/>
	    <result property="shipment_order_date" column="shipment_order_date"/>
	    <result property="storage_code" column="storage_code"/>
	    <result property="storage_name" column="storage_name"/>
	    <result property="transaction_type" column="transaction_type"/>
	    <result property="order_status" column="order_status"/>

    <!-- items 리스트 collection으로 매핑 -->
    <collection property="items" ofType="com.spring.erp_ordit.dto.buy.BuyOrderItemDTO">
        <result property="item_code" column="item_code"/>
        <result property="item_name" column="item_name"/>
        <result property="quantity" column="quantity"/>
        <result property="price" column="price"/>
        <result property="supply" column="supply"/>
        <result property="vat" column="vat"/>
        <result property="total" column="total"/>
    </collection>
	</resultMap>
	
	<!-- 구매 상세 조회  -->
	<select id="buyOrderDetail" resultMap="BuyOrderDetailMap">
	     SELECT 
		        ot.order_id,
		        ot.order_date,
		        ot.order_type,
		        ot.e_id,
		        et.e_name,
		        ct.client_code,
		        ct.client_name,
		        ot.delivery_date,
		        ot.shipment_order_date,
		        wt.storage_code,
		        wt.storage_name,
		        ot.transaction_type,
		        ost.order_status,
		        oit.item_code,
		        it.item_name,
		        oit.quantity,
		        oit.price,
		        oit.supply,
		        oit.vat,
		        oit.total  
		    FROM order_tbl ot
		    LEFT JOIN order_item_tbl oit ON oit.order_id = ot.order_id
		    LEFT JOIN item_tbl it ON oit.item_id = it.item_id
		    LEFT JOIN employee_tbl et ON ot.e_id = et.e_id
		    LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
		    LEFT JOIN warehouse_tbl wt ON ot.storage_code = wt.storage_code
		    LEFT JOIN order_status_tbl ost ON ost.order_id = ot.order_id
		    WHERE order_show = 'Y'
		      AND ot.order_id = #{order_id}
	 </select>
	 
	<!-- 구매 정보 수정 -->
	<update id="buyUpdateOrder">
	    UPDATE order_tbl
	    SET 
	    	order_id = #{order_id},
	    	order_date = #{order_date},
	    	order_type = #{order_type},
	    	e_id = #{e_id},
	    	client_code = #{client_code},
	    	delivery_date = #{delivery_date},
	    	storage_code = #{storage_code},
	    	transaction_type = #{transaction_type}
	    WHERE order_id = #{order_id}
	</update>
	
	<!-- 기존 물품 삭제 -->
	<delete id="buyDeleteOrderItems">
	    DELETE FROM order_item_tbl WHERE order_id = #{order_id}
	</delete>
	
	<!-- 새 물품 여러건 insert -->
	<insert id="buyInsertOrderItems" parameterType="java.util.List">
	    INSERT INTO order_item_tbl (
	        order_id, order_type, item_id, item_code, quantity,
	        price, supply, vat, total
	    ) VALUES
	    <foreach collection="list" item="item" separator=",">
	        (#{item.order_id}, #{item.order_type}, #{item.item_id, javaType=Long}, #{item.item_code, javaType=String}, #{item.quantity},
	         #{item.price}, #{item.supply}, #{item.vat}, #{item.total})
	    </foreach>
	</insert>
	
	<!-- 구매 입력 (일자, 담당자, 거래처, 거래유형, 입고창고) -->
	<insert id="buyOrderInsert" parameterType="com.spring.erp_ordit.dto.buy.BuyOrderDTO" useGeneratedKeys="true" keyProperty="order_id">
        INSERT INTO order_tbl (
		    order_date, order_type, e_id, client_code, storage_code,
		    transaction_type, delivery_date, shipment_order_date
		) VALUES
		(#{order_date}, #{order_type}, #{e_id}, #{client_code}, #{storage_code}, #{transaction_type}, #{delivery_date}, #{shipment_order_date})
    </insert>
    
 	<!-- 구매 내역 삭제 -->
    <delete id="buyOrderDelete" parameterType="int">
	       UPDATE order_tbl
			  SET order_show = 'N'
			WHERE order_id = #{order_id}
  	 </delete>
  	 
  	<!-- 구매현황 전체 내역 조회 -->
  	<select id="buyStatusAllList" resultType="com.spring.erp_ordit.dto.buy.BuyStatusDTO">
	     SELECT 
		        ot.order_date AS order_date,
		        ot.order_id AS order_id,
		        ot.e_id AS e_id,
		        ct.client_code AS client_code,
		        ct.client_name AS client_name,
		        it.item_code AS item_code,
		        it.item_name AS item_name,
		        oit.quantity,
		        oit.price,
		        oit.supply,
		        oit.vat,
		        oit.total AS total,
		        ot.transaction_type AS transaction_type
		    FROM order_tbl ot
	   LEFT JOIN order_item_tbl oit ON ot.order_id = oit.order_id
	   LEFT JOIN item_tbl it ON oit.item_id = it.item_id
	   LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
	       WHERE order_show = 'Y'
	         AND ot.order_type = 2
	    ORDER BY ot.order_date ASC     
	</select>
		      
    <!-- 구매현황 검색 내역 조회 -->
	<select id="buyStatusSearch" resultType="com.spring.erp_ordit.dto.buy.BuyStatusDTO">
	      SELECT 
		        ot.order_date AS order_date,
		        ot.order_id AS order_id,
		        ot.e_id AS e_id,
		        ct.client_code AS client_code,
		        ct.client_name AS client_name,
		        it.item_code AS item_code,
		        it.item_name AS item_name,
		        oit.quantity,
		        oit.price,
		        oit.supply,
		        oit.vat,
		        oit.total AS total,
		        ot.transaction_type AS transaction_type
		    FROM order_tbl ot
		    LEFT JOIN order_item_tbl oit ON ot.order_id = oit.order_id
		    LEFT JOIN item_tbl it ON oit.item_id = it.item_id
		    LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
		    <where>
		    	ot.order_show = 'Y'
		    	AND ot.order_type = 2
		    	
			    <if test="start_date != null and end_date != null">
				    AND ot.order_date BETWEEN #{start_date} AND #{end_date}
				</if>
			    <if test="client_code != null and client_code != ''">
			        AND ot.client_code = #{client_code}
			    </if>
			    <if test="e_id != null and e_id != ''">
			        AND ot.e_id = #{e_id}
			    </if>
			    <if test="storage_code != null and storage_code != ''">
			        AND ot.storage_code = #{storage_code}
			    </if>
			    <if test="item_code != null and item_code != ''">
			        AND it.item_code = #{item_code}
			    </if>
			    <if test="transaction_type != null and transaction_type != ''">
			        AND ot.transaction_type = #{transaction_type}
			    </if>
			</where>
			ORDER BY ot.order_date ASC
  	</select>
  	
  	<!-- 구매관리 - 입고 전체조회 -->
  	<select id="getBuyStockStatusAllList" resultType="com.spring.erp_ordit.dto.buy.BuyStockStatusDTO">
  		  SELECT
			    ot.order_date AS order_date,
			    ot.order_id AS order_id,
			    ct.client_code AS client_code,
			    ct.client_name AS client_name,
			    it.item_code AS item_code,
			    it.item_name AS item_name,
			    st.storage_code AS storage_code,
			    st.storage_name AS storage_name,
			    st.stock_amount AS stock_amount,
			    st.safe_stock AS safe_stock,
			    st.last_date AS last_date
			FROM order_tbl ot
			LEFT JOIN order_item_tbl oit ON ot.order_id = oit.order_id
			LEFT JOIN item_tbl it ON oit.item_id = it.item_id
			LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
			LEFT JOIN stock_tbl st ON it.item_code = st.item_code
			WHERE order_show = 'Y'
		      AND ot.order_type = 2
	</select>	      
		      
  	<!-- 구매관리 - 입고 검색한 내역 조회  -->
	<select id="buyStockStatusSearch" resultType="com.spring.erp_ordit.dto.buy.BuyStockStatusDTO">
	      SELECT
			    ot.order_date AS order_date,
			    ot.order_id AS order_id,
			    ct.client_code AS client_code,
			    ct.client_name AS client_name,
			    it.item_code AS item_code,
			    it.item_name AS item_name,
			    st.storage_code AS storage_code,
			    st.storage_name AS storage_name,
			    st.stock_amount AS stock_amount,
			    st.safe_stock AS safe_stock,
			    st.last_date AS last_date
			FROM order_tbl ot
			LEFT JOIN order_item_tbl oit ON ot.order_id = oit.order_id
			LEFT JOIN item_tbl it ON oit.item_id = it.item_id
			LEFT JOIN client_tbl ct ON ot.client_code = ct.client_code
			LEFT JOIN stock_tbl st ON it.item_code = st.item_code
		    <where>
		    	ot.order_show = 'Y'
		    	AND ot.order_type = 2
		    	
			    <if test="start_date != null and end_date != null">
				    AND ot.order_date BETWEEN #{start_date} AND #{end_date}
				</if>
			    <if test="order_id != null and order_id != ''">
			        AND ot.order_id = #{order_id}
			    </if>
			    <if test="client_code != null and client_code != ''">
			        AND ot.client_code = #{client_code}
			    </if>
		        <if test="item_code != null and item_code != ''">
			        AND it.item_code = #{item_code}
			    </if>
			    <if test="storage_code != null and storage_code != ''">
			        AND st.storage_code = #{storage_code}
			    </if>
			    <if test="stock_amount != null and stock_amount != ''">
			        AND st.stock_amount = #{stock_amount}
			    </if>
			    <if test="safe_stock != null and safe_stock != ''">
			        AND st.safe_stock = #{safe_stock}
			    </if>
			    <if test="last_date != null and last_date != ''">
			        AND st.last_date = #{last_date}
			    </if>
			</where>
			ORDER BY ot.order_date ASC
  	</select>
</mapper>   