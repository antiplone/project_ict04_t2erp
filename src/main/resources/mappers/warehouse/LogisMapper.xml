<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="com.spring.erp_ordit.dao.warehouse.LogisMapper">

	<resultMap id="logisStockMap" type="com.spring.erp_ordit.dto.warehouse.LogisStockDTO">
	    <result column="item_code" property="item_code" jdbcType="INTEGER"/>
	    <result column="item_name" property="item_name" jdbcType="VARCHAR"/>
	    <result column="item_standard" property="item_standard" jdbcType="VARCHAR"/>
	    <result column="stock_amount" property="stock_amount" jdbcType="INTEGER"/>
	    <result column="safe_stock" property="safe_stock" jdbcType="INTEGER"/>
	    <result column="last_date" property="last_date" jdbcType="DATE"/>
	    <result column="storage_code" property="storage_code" jdbcType="INTEGER"/>
	    <result column="storage_name" property="storage_name" jdbcType="VARCHAR"/>
	</resultMap>

	<resultMap id="logisOrderMap" type="com.spring.erp_ordit.dto.warehouse.LogisOrderDTO">
		<result column="order_id" property="order_id" jdbcType="INTEGER" />
		<result column="order_date" property="order_date" jdbcType="DATE" />
		<result column="delivery_date" property="delivery_date" jdbcType="DATE" />
		<result column="shipment_order_date" property="shipment_order_date" jdbcType="DATE" />
		<result column="order_type" property="order_type" jdbcType="VARCHAR" />
		<result column="transaction_type" property="transaction_type" jdbcType="VARCHAR" />
		<result column="storage_code" property="storage_code" jdbcType="INTEGER" />
		<result column="storage_name" property="storage_name" jdbcType="VARCHAR" />
		<result column="storage_location" property="storage_location" jdbcType="VARCHAR" />
		<result column="item_code" property="item_code" jdbcType="INTEGER" />
		<result column="quantity" property="quantity" jdbcType="INTEGER" />
		<result column="item_name" property="item_name" jdbcType="VARCHAR" />
		<result column="item_standard" property="item_standard" jdbcType="VARCHAR" />
	    <result column="client_code" property="client_code" jdbcType="VARCHAR"/>
	    <result column="client_name" property="client_name" jdbcType="VARCHAR"/>
	    <result column="income_confirm" property="income_confirm" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap id="logisOrderIdMap" type="com.spring.erp_ordit.dto.warehouse.LogisOrderDTO">
	    <result property="order_id" column="order_id" jdbcType="INTEGER" />
	    <result property="order_date" column="order_date" jdbcType="DATE" />
	    <result property="delivery_date" column="delivery_date" jdbcType="DATE" />
	    <result property="shipment_order_date" column="shipment_order_date" jdbcType="DATE" />
	    <result property="order_type" column="order_type" jdbcType="INTEGER" />
	    <result property="transaction_type" column="transaction_type" jdbcType="VARCHAR" />
	    <result property="storage_code" column="storage_code"/>
	    <result property="storage_name" column="storage_name"/>
	    <result property="storage_location" column="storage_location"/>
	    <result property="item_code" column="item_code"/>
	    <result property="quantity" column="quantity"/>
	    <result property="item_name" column="item_name"/>
	    <result property="item_standard" column="item_standard"/>
	    <result property="client_code" column="client_code"/>
	    <result property="client_name" column="client_name"/>
	</resultMap>
	
	<!--재고 관련 -->
	<!-- 전체 재고 조회 -->
   <select id="stockhouseList" resultMap="logisStockMap">
		SELECT
			it.item_code AS 'item_code',
			it.item_name AS 'item_name',
			it.item_standard AS 'item_standard',
			st.stock_amount AS 'stock_amount',
			st.safe_stock AS 'safe_stock',
			st.last_date AS 'last_date',
			wt.storage_code,
			wt.storage_name
		FROM
			item_tbl it
			INNER JOIN stock_tbl st ON it.item_code = st.item_code
			INNER JOIN warehouse_tbl wt ON st.storage_code = wt.storage_code
		GROUP BY
			item_code,
			item_name,
			item_standard,
			stock_amount,
			safe_stock,
			last_date,
			wt.storage_code,
			wt.storage_name
		ORDER BY
			wt.storage_code, item_code;
   </select>
   
    <select id="logisStockList" resultMap="logisStockMap">
			SELECT
			it.item_code AS 'item_code',
			it.item_name AS 'item_name',
			it.item_standard AS 'item_standard',
			st.stock_amount AS 'stock_amount',
			st.safe_stock AS 'safe_stock',
			st.last_date AS 'last_date',
			wt.storage_code,
			wt.storage_name
		FROM
			item_tbl it
			INNER JOIN stock_tbl st ON it.item_code = st.item_code
			INNER JOIN warehouse_tbl wt ON st.storage_code = wt.storage_code
		GROUP BY
			item_code,
			item_name,
			item_standard,
			stock_amount,
			safe_stock,
			last_date,
			wt.storage_code,
			wt.storage_name
		ORDER BY
			wt.storage_code, item_code;
	</select>
    
	<!-- 창고 관련 -->
	<select id="warehouseList" resultType="com.spring.erp_ordit.dto.warehouse.LogisWarehouseDTO">
		SELECT * FROM warehouse_tbl
	</select>
   
	<!-- 창고 등록 -->
	<insert id="warehouseInsert" parameterType="com.spring.erp_ordit.dto.warehouse.LogisWarehouseDTO">
		INSERT INTO warehouse_tbl(storage_name, storage_location)
		VALUES(#{storage_name}, #{storage_location})
	</insert>

	<!-- 창고 상세 -->
	<select id="findByStoragecode" parameterType="int" resultType="com.spring.erp_ordit.dto.warehouse.LogisWarehouseDTO">
		SELECT * FROM warehouse_tbl
		WHERE storage_code = #{storage_code}
	</select>

	<!-- 창고 수정 -->
	<update id="updateWarehouse" parameterType="com.spring.erp_ordit.dto.warehouse.LogisWarehouseDTO">
		UPDATE warehouse_tbl
			SET storage_name=#{storage_name}, storage_location=#{storage_location}
		WHERE storage_code = #{storage_code}
	</update>

	<!-- 창고 삭제 -->
	<delete id="deleteWarehouse" parameterType="int">
		DELETE FROM warehouse_tbl
		WHERE storage_code = #{storage_code}
	</delete>
	
	<!-- 입출고 관리 -->
	<!-- 입고 전체 목록 조회 -->
	<select id="logisOrderList" resultMap="logisOrderMap">
		SELECT
				ot.order_id,
				ot.order_date,
				ot.delivery_date,
				ot.shipment_order_date,
				ot.order_type,
				ot.transaction_type,
				ot.storage_code,
				wt.storage_name,
				wt.storage_location,
		 		it.item_code,
				oit.quantity,
				it.item_name,
				it.item_standard,
				ct.client_code,
				ct.client_name,
				oit.income_confirm
		FROM
				order_tbl as ot
		INNER JOIN
				warehouse_tbl AS wt ON ot.storage_code = wt.storage_code
		INNER JOIN
		 	    item_tbl AS it on it.item_code
		INNER JOIN
			    order_item_tbl AS oit ON oit.item_code 
		INNER JOIN
		    	client_tbl AS ct ON ct.client_code = ot.client_code
		WHERE
		    ot.delivery_date = DATE(NOW())
		    AND ot.order_type = 2
		GROUP BY order_id
	</select>
	
	<!-- 입고주문별 목록 상세조회 -->
	<select id="findByLogisOrderId" resultMap="logisOrderIdMap">
		select
		    ot.order_id as 'order_id',
		    ot.order_date as 'order_date',
		    ot.delivery_date as 'delivery_date',
		    ot.shipment_order_date as 'shipment_order_date',
		    ot.order_type as 'order_type',
		    ot.transaction_type as 'transaction_type',
		    ot.storage_code  as 'storage_code',
		    wt.storage_name  as 'storage_name',
		    wt.storage_location  as 'storage_location',
		    oit.item_code as 'item_code',
		    oit.quantity as 'quantity',
		    it.item_name as 'item_name',
		    it.item_standard as 'item_standard',
		    ct.client_code as 'client_code',
		    ct.client_name as 'client_name',
			oit.income_confirm
		from
		    order_tbl as ot
		inner join
		    order_item_tbl oit on oit.order_id = ot.order_id
		inner join
		    item_tbl it on oit.item_id = it.item_id
		inner join
		    warehouse_tbl wt on wt.storage_code
		inner join
		    client_tbl ct on ct.client_code
		where
		    ot.order_id = #{order_id}
		AND 
			ot.order_type = 2
		group BY
		    oit.item_code
	</select>

	<select id="findByOrderItem" parameterType="map" resultType="com.spring.erp_ordit.dto.warehouse.LogisOrderItemDTO">
		SELECT
			oit.order_id,
			oit.order_type,
			oit.quantity,
			oit.price,
			oit.supply,
			oit.vat,
			oit.total,
			it.item_id,
			it.item_code,
			it.item_name,
			it.item_standard,
			it.item_status,
			it.item_reg_date,
			oit.income_confirm
		FROM 
			order_item_tbl oit
		INNER JOIN
			item_tbl it ON oit.item_code = it.item_code
		WHERE 
			oit.order_id = #{order_id} 
			AND oit.item_code = #{item_code}
			AND oit.order_type = #{order_type}
		group by
			oit.item_code
	</select>
	
	<!-- 판매 전체 목록 조회 --> <!-- 나중에 바꿔야됨 -->
	<select id="logisSalesList" resultType="com.spring.erp_ordit.dto.warehouse.LogisSalesDTO">
		SELECT
				ot.order_id,
				ot.order_date,
				ot.shipment_order_date,
				ot.order_type,
				ot.transaction_type,
				wt.storage_code,
				wt.storage_name,
				wt.storage_location,
		 		it.item_code,
				oit.quantity,
				it.item_name,
				it.item_standard,
				ct.client_code,
				ct.client_name,
				oit.income_confirm
		FROM
				order_tbl as ot
		INNER JOIN
				warehouse_tbl AS wt ON ot.storage_code = wt.storage_code
		INNER JOIN
		 	    item_tbl AS it on it.item_code
		INNER JOIN
			    order_item_tbl AS oit ON oit.item_code 
		INNER JOIN
		    	client_tbl AS ct ON ct.client_code = ot.client_code
		WHERE
		    ot.shipment_order_date = DATE(NOW())
		    AND ot.order_type = 1
		GROUP BY order_id
	</select>
	
	<!-- 판매주문별 목록 상세조회 -->
	<select id="findByLogisSalesId" resultType="com.spring.erp_ordit.dto.warehouse.LogisSalesDTO">
		select
		    ot.order_id as 'order_id',
		    ot.order_date as 'order_date',
		    ot.shipment_order_date as 'shipment_order_date',
		    ot.order_type as 'order_type',
		    ot.transaction_type as 'transaction_type',
		    wt.storage_code  as 'storage_code',
		    wt.storage_name  as 'storage_name',
		    wt.storage_location  as 'storage_location',
		    oit.item_code as 'item_code',
		    oit.quantity as 'quantity',
		    it.item_name as 'item_name',
		    it.item_standard as 'item_standard',
		    ct.client_code as 'client_code',
		    ct.client_name as 'client_name',
   		    oit.income_confirm as 'income_confirm'
		from
		    order_tbl as ot
		inner join
		    order_item_tbl oit on oit.order_id = ot.order_id
		inner join
		    item_tbl it on oit.item_id = it.item_id
		inner join
		    warehouse_tbl wt on wt.storage_code
		inner join
		    client_tbl ct on ct.client_code
		where
		    ot.order_id = #{order_id}
		AND 
			ot.order_type = 1
		group BY
		    oit.item_code
	</select>
	
	<select id="findBySalesItem" parameterType="map" resultType="com.spring.erp_ordit.dto.warehouse.LogisSalesItemDTO">
		SELECT
			oit.order_id,
			oit.order_type,
			oit.quantity,
			oit.price,
			oit.supply,
			oit.vat,
			oit.total,
			it.item_id,
			it.item_code,
			it.item_name,
			it.item_standard,
			it.item_status,
			it.item_reg_date
		FROM 
			order_item_tbl oit
		INNER JOIN
			item_tbl it ON oit.item_code = it.item_code
		WHERE 
			oit.order_id = #{order_id} 
			AND oit.item_code = #{item_code}
			AND oit.order_type = #{order_type}
			AND oit.income_confirm = 'N'
		group by
			oit.item_code
	</select>

	<update id="updateStock" parameterType="com.spring.erp_ordit.dto.warehouse.LogisStockDTO">
	
		UPDATE
			stock_tbl
		SET 
			stock_amount = stock_amount + #{stock_amount}, last_date = DATE(NOW())
		WHERE
			item_code = #{item_code}
		AND
			storage_code= #{storage_code}
			
	</update>
	
	<update id="updateOrderStock" parameterType="com.spring.erp_ordit.dto.warehouse.LogisOrderItemDTO">
	
		UPDATE 
			order_item_tbl
		SET 
			income_confirm = 'Y'
		WHERE 
			item_code = #{item_code}
		AND
			order_id = #{order_id}
			
	</update>
	
	<update id="updateSellStock" parameterType="com.spring.erp_ordit.dto.warehouse.LogisStockDTO">
		UPDATE
			stock_tbl
		SET 
			stock_amount = stock_amount - #{stock_amount}, last_date = DATE(NOW())
		WHERE
			item_code = #{item_code}
		AND
			storage_code= #{storage_code};
	
		UPDATE 
			order_item_tbl
		SET 
			income_confirm = 'Y'
		WHERE 
			item_code = #{item_code}
		AND order_id = #{order_id};
	</update>

</mapper>